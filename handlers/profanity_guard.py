from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from utils.validators import BAD_WORDS, compiled_bad_patterns


# –ö–ª—é—á–µ–≤—ã–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ—Ä–∞–∑—ã –∏–∑ –∫–Ω–æ–ø–æ–∫
SAFE_PHRASES = [
    "—Ö–æ—á—É —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥",
    "–Ω–µ–æ–±—Ö–æ–¥–∏–º —Ä–µ–º–æ–Ω—Ç",
    "–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
    "—á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
    "üõ† –∏—Å—Ç–æ—Ä–∏—è —Ä–µ–º–æ–Ω—Ç–æ–≤",
    "üõµ —Å—Ç–∞—Ç—É—Å –∞—Ä–µ–Ω–¥—ã",
    "üí≥ –ø–ª–∞—Ç–µ–∂–∏",
    "üì∑ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–ø–ª–∞—Ç—É",
    "üìÖ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø–ª–∞—Ç—ë–∂"
]

async def profanity_guard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return None

    text = update.message.text.strip().lower()

    if text in SAFE_PHRASES:
        return None  # –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

    if any(bad in text for bad in BAD_WORDS):
        await update.message.reply_text("‚õî –ë–µ–∑ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
        return ConversationHandler.END

    if any(pattern.search(text) for pattern in compiled_bad_patterns):
        await update.message.reply_text("‚õî –ü—Ä–æ—Å—å–±–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É.")
        return ConversationHandler.END

    return None
