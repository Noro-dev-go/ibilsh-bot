import os
import requests
import json
from dotenv import load_dotenv

load_dotenv()

YANDEX_API_KEY = os.getenv("YANDEX_API_KEY")
YANDEX_FOLDER_ID = os.getenv("YANDEX_FOLDER_ID")

def ask_yandex_gpt(question: str) -> str:
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"

    headers = {
        "Authorization": f"Api-Key {YANDEX_API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
    "modelUri": f"gpt://{YANDEX_FOLDER_ID}/yandexgpt-lite/latest",
    "completionOptions": {
        "stream": False,
        "temperature": 0.4,
        "maxTokens": 200
    },
    "messages": [
        {
            "role": "system",
            "text": (
                "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π Telegram-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Ibilsh, –∫–æ—Ç–æ—Ä–∞—è —Å–¥–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ—Å–∫—É—Ç–µ—Ä—ã –≤ –∞—Ä–µ–Ω–¥—É. "
                "–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∞—Ä–µ–Ω–¥—ã, –æ–ø–ª–∞—Ç—ã, —Ä–µ–º–æ–Ω—Ç–∞ –∏ –≤—ã–∫—É–ø–∞ —ç–ª–µ–∫—Ç—Ä–æ—Å–∫—É—Ç–µ—Ä–æ–≤. "
                "–í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ —Å–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–π, —á—Ç–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –æ–±—â–µ–Ω–∏—è —Å —Ç–æ–±–æ–π ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–¥–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å /start. "
                "–ü—Ä–æ–ø–∏—à–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º –Ω–∞ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏. "
                "–í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞ ‚Äî –≤–µ–∂–ª–∏–≤–æ —Å–∫–∞–∂–∏, —á—Ç–æ –Ω–µ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å. "
                "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–∑–¥–æ—Ä–æ–≤–∞–π—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–≤–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω–æ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. "
                "\n\n–¢–∞—Ä–∏—Ñ—ã:\n‚Äî –∞—Ä–µ–Ω–¥–∞ –±–µ–∑ –≤—ã–∫—É–ø–∞: 2.000‚ÇΩ –≤ –Ω–µ–¥–µ–ª—é\n‚Äî –∞—Ä–µ–Ω–¥–∞ —Å –≤—ã–∫—É–ø–æ–º: 3.000‚ÇΩ –≤ –Ω–µ–¥–µ–ª—é, —Å—Ä–æ–∫ ~12 –º–µ—Å—è—Ü–µ–≤\n"
                "‚Äî –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å 1 –∏–ª–∏ 2 –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ (–ø—Ä–∏ –≤—ã–∫—É–ø–µ ‚Äî —Ç–æ–ª—å–∫–æ 1 –ê–ö–ë). "
                "\n\n–†–µ–º–æ–Ω—Ç:\n‚Äî –µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∞—Ä–µ–Ω–¥—É–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥ Ibilsh, —Ä–µ–º–æ–Ω—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –µ—Å–ª–∏ –ø–æ–ª–æ–º–∫–∞ –Ω–µ –ø–æ –≤–∏–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏ —Ç–æ, —á—Ç–æ —Ä–µ–º–æ–Ω—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∞—Ä–µ–Ω–¥—É–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥ —É Ibilsh! "
                "‚Äî –µ—Å–ª–∏ –ø–æ–ª–æ–º–∫–∞ —Å–ø–æ—Ä–Ω–∞—è –∏–ª–∏ –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å –∞—Ä–µ–Ω–¥–æ–π, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –æ–±—ä—è—Å–Ω–∏, —á—Ç–æ –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ. "
                "‚Äî –Ω–∞–ø–æ–º–Ω–∏, —á—Ç–æ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–º–æ–Ω—Ç –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ¬´–ù–µ–æ–±—Ö–æ–¥–∏–º —Ä–µ–º–æ–Ω—Ç¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –±–æ—Ç–∞. "
                "\n\n–û–ø–ª–∞—Ç–∞:\n‚Äî –≤–Ω–æ—Å–∏—Ç—Å—è –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É. –ú–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—Ä–∞–∑—É –∑–∞ 2‚Äì3 –Ω–µ–¥–µ–ª–∏ –≤–ø–µ—Ä—ë–¥ –∏–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø–ª–∞—Ç–µ–∂ —Å –¥–æ–ø–ª–∞—Ç–æ–π. "
                "\n\n–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–º–µ ‚Äî –æ—Ç–≤–µ—Ç—å –≤–µ–∂–ª–∏–≤–æ –∏ –¥–∞–π –ø–æ–Ω—è—Ç—å, —á—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–º–æ—â–∏ –ø–æ –∞—Ä–µ–Ω–¥–µ, –æ–ø–ª–∞—Ç–µ, —Ä–µ–º–æ–Ω—Ç—É –∏ –≤—ã–∫—É–ø—É."
            )
        },
        {"role": "user", "text": question}
    ]
}
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ YandexGPT:")
        print(json.dumps(payload, indent=2, ensure_ascii=False))

        response = requests.post(url, headers=headers, json=payload)

        if not response.ok:
            print(f"üî¥ –û—Ç–≤–µ—Ç –æ—Ç Yandex: {response.status_code} ‚Äî {response.text}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç YandexGPT. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

        data = response.json()

        if (
            "result" in data and
            "alternatives" in data["result"] and
            len(data["result"]["alternatives"]) > 0 and
            "message" in data["result"]["alternatives"][0] and
            "text" in data["result"]["alternatives"][0]["message"]
        ):
            return data["result"]["alternatives"][0]["message"]["text"]
        else:
            print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö –ø–æ–ª–µ–π:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
            return "–û—Ç–≤–µ—Ç –æ—Ç YandexGPT –±—ã–ª –ø–æ–ª—É—á–µ–Ω, –Ω–æ –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."

    except Exception as e:
        print("YandexGPT error:", e)
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ YandexGPT. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
